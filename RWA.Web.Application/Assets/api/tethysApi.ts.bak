import axios from 'axios';

// Types
export interface TethysSearchItem {
  identifiantRaf?: string
  libelleCourt?: string
  raisonSociale?: string
  paysDeResidence?: string
  paysDeNationalite?: string
  numeroEtNomDeRue?: string
  ville?: string
  categorieTethys?: string
  nafNace?: string
  codeIsin?: string
  segmentDeRisque?: string
  segmentationBpce?: string
  codeCusip?: string
  rafTeteGroupeReglementaire?: string
  nomTeteGroupeReglementaire?: string
  dateNotationInterne?: string
  codeNotation?: string
  codeConso?: string
  codeApparentement?: string
}

export interface Page<T> { items: T[]; nextCursor?: string; total: number }

export async function fetchFailed(cursor?: string, take = 20): Promise<Page<any>> {
  const { data } = await axios.get('/api/workflow/tethys-status', { params: { filter:'failed', cursor, take }});
  return data as Page<any>;
}

export async function searchTethys(query: string, cursor?: string, take = 20): Promise<Page<TethysSearchItem>> {
  const { data } = await axios.get('/api/workflow/tethys/search', { params: { q: query, cursor, take }});
  return data as Page<TethysSearchItem>;
}

export async function fetchSuggestions(numLigne: number): Promise<TethysSearchItem[]> {
  const { data } = await axios.get(`/api/workflow/tethys/suggestions/${numLigne}`);
  return data as TethysSearchItem[];
}

export async function assignRaf(numLigne: number, raf: string): Promise<void> {
  await axios.post('/api/workflow/tethys/assign', { numLigne, raf });
}

export async function assignRafBatch(numLignes: number[], raf: string, cptTethys?: string): Promise<void> {
  await axios.post('/api/workflow/tethys/assign-batch', { numLignes, raf, cptTethys });
}

export async function getTethysStatus(filter = "all", cursor?: string, take = 20): Promise<Page<any>> {
  const { data } = await axios.get('/api/workflow/tethys-status', { params: { filter, cursor, take }});
  return data as Page<any>;
}

export async function updateTethysStatus() {
  await axios.post('/api/workflow/update-tethys-status');
}

export async function getTethysCounts() {
  const { data } = await axios.get('/api/workflow/tethys/counts')
  return data as { total: number; lookedUp: number; pendingLookup: number; failed: number; successful: number }
}

