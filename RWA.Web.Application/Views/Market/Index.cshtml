@model RWA.Web.Application.Models.RWAMarketViewModel
@{
    ViewData["Title"] = "Market"; // Définir le titre de la page
    Layout = "_Layout"; // Utiliser le layout que vous avez défini
}

<!-- Ajouter ceci dans la section <head> de votre _Layout.cshtml ou Index.cshtml -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.14.0/css/bootstrap-select.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.14.0/js/bootstrap-select.min.js"></script>


<div class="text-center">
    <h1 class="display-4">Seed Metrics</h1>
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<h2>Filtrer par Actif</h2>

@using (Html.BeginForm("Filter", "Market", FormMethod.Post, new { id = "form2" }))
{
    <div>
        <label>Choisissez les actifs :</label>
        
        <select class="form-control select-picker" id="SelectedAssets" name="SelectedAssets" multiple data-live-search="true">
            @foreach (var asset in Model.AvailableAssets.Select(asset => asset.Text))
            {
                <option value="@asset" selected="@(Model.SelectedAssets.Contains(asset) ? "selected" : null)">@asset</option>
            }
        </select>
    </div>

    <div>
        <label>Dates :</label>
        <div>
            <label for="StartDate">Date de début :</label>
            <input type="date" id="StartDate" name="StartDate" value="@Model.StartDate?.ToString("yyyy-MM-dd")" />
        </div>
        <div>
            <label for="EndDate">Date de fin :</label>
            <input type="date" id="EndDate" name="EndDate" value="@Model.EndDate?.ToString("yyyy-MM-dd")" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Filtrer</button>
}
<h2>Transactions</h2>
@if (Model.ErrorMessage != null)
{
    // Message si le fichier des transaction n'a pas pu être lu.
    <div class="alert alert-danger">@Model.ErrorMessage</div>
}
@if (Model.TransactionCount > 0)
{
    <p>Nombre de transactions lues : @Model.TransactionCount</p>
    <table class="table">
        <thead>
            <tr>
                <th>Type</th>
                <th>Montant</th>
                <th>Date</th>
                <th>Actif</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var transaction in Model.Transactions)
            {
                // Vérifiez si l'actif est sélectionné et si la date est dans l'intervalle
                if ((Model.SelectedAssets.Count == 0 || Model.SelectedAssets.Contains(transaction.Actif)) &&
                    (!Model.StartDate.HasValue || transaction.Date >= Model.StartDate.Value) &&
                    (!Model.EndDate.HasValue || transaction.Date <= Model.EndDate.Value))
                {
                    <tr>
                        <td>@transaction.Type</td>
                        <td>@transaction.Montant</td>
                        <td>@transaction.Date.ToShortDateString()</td>
                        <td>@transaction.Actif</td>
                    </tr>
                }
            
        }
    </table>
}
else
{
    <p>Aucune transaction à afficher.</p>
}
@section scripts {
    <script>
        $(document).ready(function () {
            $('.select-picker').selectpicker(); // Initialisation de Bootstrap Select
        });
    </script>
}
